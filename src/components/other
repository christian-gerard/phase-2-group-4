	{gameQuestions.map((question) => (
								<div>
		    					<p>{question.question}</p>
							  	<p>A: {question.A}</p>
							  	<p>B: {question.B}</p>
							  	<p>C: {question.C}</p>
							  	<p>D: {question.D}</p>
									<input type="text" name="answer" onSubmit={handleAnswerSubmit} />
								</div>
								))}
								
								<form onChange={handleGameDifficultyChange}>
									<label htmlFor="type">Choose Difficulty</label>
							<select name="difficulty">
										<option value="">Select One</option>
										<option value="easy">Easy</option>
										<option value="medium">Medium</option>
										<option value="hard">Hard</option>
							</select>
						</form>
						
						
						const handleFirstQuestion = () => { gameQuestions.find(question => gameQuestions[0].id === question.id) 
							
							firstQuestion={handleFirstQuestion()}
							
							
							return (   if (gameQuestionsCount === 0) { 
										        <div>
		          <h1>Game Over!</h1>
		          <p>
		            You got {numberCorrect} correct answers out of
		            {numberOfGameQuestions} questions.
		          </p>
		        </div>
		      
		    } else {
		        <div>
		          <h1>Game Over!</h1>
		          <p>
		            You got {numberCorrect} correct answers out of
		            {numberOfGameQuestions} questions.
		          </p>
		        </div>
		      );if (gameQuestions.length === 0) {
			
			return (<GameOver
				numberCorrect={numberCorrect}
				numberOfGameQuestions={numberOfGameQuestions} />
			)
		}
		else {